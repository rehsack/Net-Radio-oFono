#!/usr/pkg/bin/perl -w

use strict;
use warnings;

use 5.010;

use Net::Radio::oFono;

use Net::DBus qw(:typing);

use Log::Any::Adapter;
use Log::Log4perl;
Log::Log4perl->easy_init($Log::Log4perl::DEBUG);
Log::Any::Adapter->set('Log4perl');

use Net::DBus::Reactor;

use Time::HiRes qw(sleep);
use Data::Dumper;

my ( $pin, $apn, $usr, $prd ) = @ENV{ "PIN", "APN", "USR", "PRD" };

sub on_modem_added
{
    my ( $ofono, $event, $modem_path ) = @_;

    my $modem = $ofono->get_modem_interface( $modem_path, "Modem" );

    if ( $modem->GetProperty("Powered") )
    {
        # disable before starting workflow to get a clean start ...
        $modem->SetProperty( "Powered", dbus_boolean(0) );
    }
    else
    {
        # state is disabled -> begin clean workflow
        $modem->SetProperty( "Powered", dbus_boolean(1) );
    }

    return;
}

sub on_modem_power_changed
{
    my ( $ofono, $event, $info ) = @_;
    my ( $modem_path, $power_state ) = @$info;

    $power_state
      or $ofono->get_modem_interface( $modem_path, "Modem" )
      ->SetProperty( "Powered", dbus_boolean(1) );
}

sub on_simmgr_pin_required
{
    my ( $ofono, $event, $info ) = @_;
    my ( $modem_path, $pin_type ) = @$info;

    # we need to enter the pin here
    # XXX maybe add an extra check for ON_SIMMANAGER_PROPERTY_RETRIES_CHANGED // {pin => 3,pin2 => 3,puk => 10,puk2 => 10}
    $pin_type eq "pin"
      and $ofono->get_modem_interface( $modem_path, "SimManager" )->EnterPin( "pin", $pin );
    # pin accepted
    $pin_type eq "none"
      and
      $ofono->get_modem_interface( $modem_path, "Modem" )->SetProperty( "Online", dbus_boolean(1) );

    return;
}

my %sim_features;

sub on_modem_features_changed
{
    my ( $ofono, $event, $info ) = @_;
    my ( $modem_path, $features ) = @$info;

    my %new_features = map { $_ => 1 } grep { !defined( $sim_features{$_} ) } @$features;

    # ...

    %sim_features = map { $_ => 1 } @$features;

    return;
}

my $oFono = Net::Radio::oFono->new(
                           "ON_MODEM_ADDED"                             => \&on_modem_added,
                           "ON_MODEM_PROPERTY_POWERED_CHANGED"          => \&on_modem_power_changed,
                           "ON_SIMMANAGER_PROPERTY_PINREQUIRED_CHANGED" => \&on_simmgr_pin_required,
                           "ON_MODEM_PROPERTY_FEATURES_CHANGED" => \&on_modem_features_changed,
);

# print Dumper($oFono);

# for my $i ( 1 .. 10 ) { Net::DBus::Reactor->main->step(); sleep 0.1; }
Net::DBus::Reactor->main->run();
